#include "cClient.h"

using namespace std;

cClient::cClient()
{
	m_bIsConnected = false;
	m_eStatus = eSTATUS_Offline;
}

////////////////////////////////////////////////////////////////////////////////

cClient::~cClient()
{
}

////////////////////////////////////////////////////////////////////////////////

void cClient::SetStatus(eStatus eStatus)
{
	m_eStatus = eStatus;
}

////////////////////////////////////////////////////////////////////////////////

eStatus cClient::GetStatus()
{
	return m_eStatus;
}

////////////////////////////////////////////////////////////////////////////////

bool cClient::IsConnected()
{
	return m_bIsConnected;
}

////////////////////////////////////////////////////////////////////////////////

void cClient::SetConnected(bool bIsConnected)
{
	m_bIsConnected = bIsConnected;
}

////////////////////////////////////////////////////////////////////////////////

cClient& cClient::operator = (const cClient& Copy)
{
	m_sUserName = Copy.m_sUserName;
	m_sUserPassword = Copy.m_sUserPassword;
	m_eStatus = Copy.m_eStatus;
	m_bIsConnected = Copy.m_bIsConnected;
	m_pTcpSocket = Copy.m_pTcpSocket;
	return *this;
}

////////////////////////////////////////////////////////////////////////////////

void cClient::SetUserName(QString sUserName)
{
	m_sUserName = sUserName;
}

////////////////////////////////////////////////////////////////////////////////

void cClient::SetUserPassword(QString sUserPassword)
{
	m_sUserPassword = sUserPassword;
}

////////////////////////////////////////////////////////////////////////////////

QString cClient::GetUsername()
{
	return m_sUserName;
}

////////////////////////////////////////////////////////////////////////////////

QString cClient::GetUserPassword()
{
	return m_sUserPassword;
}

////////////////////////////////////////////////////////////////////////////////

QTcpSocket* cClient::GetTcpSocket()
{
	return m_pTcpSocket;
}

void cClient::SetTcpSocket(QTcpSocket* Socket)
{
	m_pTcpSocket = Socket;
}